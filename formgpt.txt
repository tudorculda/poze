import org.apache.avro.io.DatumWriter;
import org.apache.avro.io.Encoder;
import org.apache.avro.io.EncoderFactory;
import org.apache.avro.specific.SpecificDatumWriter;
import org.apache.kafka.clients.producer.*;

import java.io.ByteArrayOutputStream;
import java.util.Properties;

public class AvroProducer {

    public static void main(String[] args) throws Exception {
        // Kafka config
        Properties props = new Properties();
        props.put("bootstrap.servers", "localhost:9092");
        props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
        props.put("value.serializer", "org.apache.kafka.common.serialization.ByteArraySerializer");

        KafkaProducer<String, byte[]> producer = new KafkaProducer<>(props);

        // Create Avro record
        MyRecord record = MyRecord.newBuilder()
            .setId(1)
            .setName("Test Avro")
            .build();

        // Serialize to Avro binary
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        DatumWriter<MyRecord> writer = new SpecificDatumWriter<>(MyRecord.class);
        Encoder encoder = EncoderFactory.get().binaryEncoder(out, null);
        writer.write(record, encoder);
        encoder.flush();
        byte[] avroBytes = out.toByteArray();
        out.close();

        // Send to Kafka
        ProducerRecord<String, byte[]> message = new ProducerRecord<>("my-topic", "my-key", avroBytes);
        producer.send(message, (metadata, ex) -> {
            if (ex == null) {
                System.out.println("Message sent to topic: " + metadata.topic());
            } else {
                ex.printStackTrace();
            }
        });

        producer.flush();
        producer.close();
    }
}